@using System.Web.UI.WebControls
@using Entitron
@model DBForeignKey
@{
    ViewBag.Title = "CreateForeignKey";
}
<script type="text/javascript">
    $(function () {
        $(document).on('change', '#targetTable', function () {
            $.getJSON('/DBManager/getTableColumns?appName=@(Request["appName"])&tableName=' + $(this).val(), function (data) {
                $('#targetColumn').html('');
                $.each(data, function (i, item) {
                    $('#targetColumn').append('<option>' + item + '</option>');
                });
            });
        });
        $('#targetTable').change();
    });
</script>
<h2>CreateForeignKey</h2>

@using (Html.BeginForm("AddForeignKey", "DBManager", new { @appName = Request["appName"], @tableName = Model.sourceTable }, FormMethod.Post, null))
{
    <table class="table table-bordered table-responsive">
        <thead>
            <tr>
                <th>Jméno</th>
                <td>@Html.TextBoxFor(fk => fk.name)</td>
            </tr>
            <tr>
                <th>Tabulka A</th>
                <th>Tabulka B</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Model.sourceTable @Html.HiddenFor(fk => fk.sourceTable)</td>
                <td>@Html.DropDownListFor(fk => fk.targetTable, new SelectList(Model.targetTable.Application.GetTables().Select(t => t.tableName)))</td>
            </tr>
            <tr>
                <td>@Html.DropDownListFor(fk => fk.sourceColumn, new SelectList(ViewBag.Columns))</td>
                <td>@Html.DropDownListFor(fk => fk.targetColumn, new SelectList(new List<string>()))</td>
            </tr>
        </tbody>
    </table>
    <table class="table table-bordered table-responsive">
        <thead>
        <tr>
            <th>On Delete Action</th>
            <td>
                @Html.RadioButtonFor(fk=>fk.onDelete,"deleteAction", "cascade") Cascade
                @Html.RadioButtonFor(fk => fk.onDelete, "deleteAction", "null") Set Null
                @Html.RadioButtonFor(fk => fk.onDelete, "deleteAction", "default") Set Default
            </td>
        </tr>
        <tr>
            <th>On Update Action</th>
            <td>
                @Html.RadioButtonFor(fk => fk.onUpdate, "updateAction", "cascade") Cascade
                @Html.RadioButtonFor(fk => fk.onUpdate, "updateAction", "null") Set Null
                @Html.RadioButtonFor(fk => fk.onUpdate, "updateAction", "default") Set Default
            </td>
        </tr>
        </thead>
    </table>
    <button type="submit">Create Foreign Key</button>
    @Html.ActionLink("Back", "Index", new { @appName = Request["appName"] })
}

