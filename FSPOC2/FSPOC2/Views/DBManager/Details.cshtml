    @using DynamicDB
    @using System.Data
    @using System.Web.UI.WebControls
    @model DBTable
    @{
        ViewBag.Title = "Create";
        var types = Enum.GetValues(typeof(SqlDbType));
        int i = 0;
    }
    <script>
        $(document).ready(function () {     
            function reindex($row, newId) {
                $row.find('input, select').each(function () {
                    this.name = this.name.replace(/\[[0-9]+\]/, '[' + newId + ']');
                });
                $row.attr('data-id', newId);
            }
            function reindexAll() {
                $('#newColumn tr[data-id]').each(function (index) {
                    reindex($(this), index);
                });
            }

            $('#btnAddColumn').click(function () {
                var $table = $('#newColumn');
                var columnCount = $table.find('tr[data-id]').length;
                var nextId = columnCount; // index začíná 0

                var $newRow = $('#ColumnTemplate').clone();
                reindex($newRow, nextId);
                $newRow.find('input, select').attr('disabled', false);
                $newRow.removeAttr('id style');
                $table.append($newRow);
                return false;
            });

            $(document).on('click', '.btnRemoveColumn', function () {
                $(this).parents('tr').eq(0).remove();
                reindexAll();
                return false;
            });

            $('#btnAddColumn').click();
        });
    </script>
    <h2>Detail</h2>

    @using (Html.BeginForm("AlterTable", "DBManager", new { @appName = Request["appName"] }, FormMethod.Post, null))
    {

        <table class="table table-bordered" id="mytable">
    <thead>
    <tr>
    <th>Name: </th>
    <td>@Html.TextBoxFor(x => x.tableName, "tableName")</td>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Max Length</th>
        <th>Can be null?</th>
        <th></th>
    </tr>
    </thead>
            <tbody>
        @foreach (DBColumn column in Model.columns)
        {
            <tr>
                <td>@column.Name</td>
                <td>@column.type.ToString()</td>
                <td>@column.maxLength.ToString()</td>
                <td>@column.canBeNull.ToString()</td>
                <td>@Html.ActionLink("Drop column", "DropColumn", new {@tableName = Model.tableName, @appName = Request["appName"], @columnName = column.Name})</td>

            </tr>
        }
<tr>
    <td>Actions:</td>
    <td><button id="btnAddColumn" class="btn btn-success">Add Column</button></td>
</tr>
    </tbody>
        </table>

<button type="submit">Alter Table</button>
@Html.ActionLink("Back", "Index", new { @appName = ViewBag.appName })

}
