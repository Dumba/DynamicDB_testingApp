@using Entitron
@using System.Data
@model DBTable
@{
    ViewBag.Title = "Create";
    var types = Enum.GetValues(typeof(SqlDbType));
}
<script>
    $(document).ready(function () {
        function reindex($row, newId) {
            $row.find('input, select').each(function() {
                this.name = this.name.replace(/\[[0-9]+\]/, '[' + newId + ']');
            });
            $row.attr('data-id', newId);
        }
        function reindexAll() {
            $('#newColumn tr[data-id]').each(function (index) {
                reindex($(this), index);
            });
        }

        $('#btnAddColumn').click(function () {
            var $table = $('#newColumn');
            var columnCount = $table.find('tr[data-id]').length;
            var nextId = columnCount; // index začíná 0

            var $newRow = $('#ColumnTemplate').clone();
            reindex($newRow, nextId);
            $newRow.find('input, select').attr('disabled', false);
            $newRow.removeAttr('id style');
            $table.append($newRow);
            return false;
        });

        $(document).on('click', '.btnRemoveColumn', function () {
            $(this).parents('tr').eq(0).remove();
            reindexAll();
            return false;
        });

        $('#btnAddColumn').click();
    });
</script>
<h2>Create</h2>

@using (Html.BeginForm("Create", "DBManager", new { @appName = Request["appName"] }, FormMethod.Post, null))
{

    <table class="table table-bordered" id="mytable">
        
            <tr>
                <th>Name: </th>
                <td>@Html.TextBoxFor(x=>x.tableName,"tableName")</td>
            </tr>
            <tr>
                <th>New column: </th>
                <td>
                    <table id="newColumn" class="table table-responsive table-bordered table-striped">
                        <tbody>
                            <tr>
                                <th>Column Name:</th>
                                <th>Data Type:</th>
                                <th>Max Length:</th>
                                <th>Unique:</th>
                                <th>Nullable:</th>
                                <th>Primary Key:</th>
                                @*<th>Identity:</th>
                                <th>Default Value:</th>
                                <th>Index:</th>*@
                                <th>Remove:</th>
                            </tr>
                            <tr id="ColumnTemplate" style="display: none">
                                <td>@Html.TextBoxFor(x=>x.columns[0].Name, new {@disabled=true})</td>
                                <td>
                                    <select name="columns[0].Type" disabled="True">
                                        @foreach (SqlDbType type in types)
                                        {
                                            <option value="@(type.ToString())">@(type.ToString())</option>
                                        }
                                    </select>
                                </td>
                                <td>@Html.TextBoxFor(x => x.columns[0].maxLength, new { @disabled = true })</td>
                                <td>@Html.CheckBoxFor(x => x.columns[0].isUnique, new { @disabled = true })</td>
                                <td>@Html.CheckBoxFor(x => x.columns[0].canBeNull, new { @disabled = true })</td>
                                <td>@Html.CheckBoxFor(x => x.columns[0].isPrimaryKey, new { @disabled = true })</td>
                                @*<td>@Html.CheckBox("columnIdentity1", new {@disabled=true})</td>
    <td>@Html.TextBox("columnDefVal1", new {@disabled=true})</td>
    <td>@Html.CheckBox("columnIndex1", new {@disabled=true})</td>*@
                                <td><button class="btn btn-danger btnRemoveColumn">Remove</button></td>
                            </tr>
                        </tbody>
                    </table>
                </td>

            </tr>
            <tr>
                <td>Actions:</td>
                <td><button id="btnAddColumn" class="btn btn-success">Add Column</button></td>
            </tr>
        
    </table>

            <button type="submit">Create</button>
            @Html.ActionLink("Back", "Index", new { @appName = ViewBag.appName })
      
}